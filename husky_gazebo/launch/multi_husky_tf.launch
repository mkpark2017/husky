<?xml version="1.0"?>
<launch>

  <arg name="mav_name" default="firefly"/>
  <arg name="enable_logging" default="false" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file" default="$(arg mav_name)" />
  <arg name="debug" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true" />
  <!-- The following line causes gzmsg and gzerr messages to be printed to the console
      (even when Gazebo is started through roslaunch) -->
  <arg name="verbose" default="false"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rotors_gazebo)/worlds/empty.world" />
  </include>

  <group ns="husky_1">
    <include file="$(find husky_gazebo)/launch/spawn_husky_tf.launch">
        <arg name="robot_ns" value="husky1" />
  	<arg name="tf_pre" value="husky1_tf" />
        <arg name="laser_enabled" value="true" />
    </include>
  </group>

  <group ns="husky_2">
    <include file="$(find husky_gazebo)/launch/spawn_husky_tf.launch">
        <arg name="robot_ns" value="husky2" />
  	<arg name="tf_pre" value="husky2_tf" />
        <arg name="laser_enabled" value="true" />

        <arg name="x" default="-1.0"/>
        <arg name="y" default="-1.0"/>
        <arg name="yaw" default="1.0"/>
    </include>
  </group>

  <group ns="$(arg mav_name)_1">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="namespace" value="$(arg mav_name)_1" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_with_velodyne.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg mav_name)_1"/>
      <arg name="y" value="-1.0"/>
    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    <node name="waypoint_publisher" pkg="rotors_gazebo" type="waypoint_publisher" output="screen" args="0 -1 1 0 2"/>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>

  <group ns="$(arg mav_name)_2">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="namespace" value="$(arg mav_name)_2" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_with_velodyne.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg mav_name)_2"/>
      <arg name="y" value="1.0"/>
    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    <node name="waypoint_publisher" pkg="rotors_gazebo" type="waypoint_publisher" output="screen" args="0 1 1 0 2"/>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>
</launch>
